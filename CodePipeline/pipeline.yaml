AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation SageMaker pipeline.

Parameters:
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
  GitHubToken:
    NoEcho: true
    Description: Secret OAuth token with access to the GitHub repository.
    Type: String
  GitHubUser:
    Default: stelligent
    Description: GitHub username
    Type: String
  Repo:
    Default: sagemaker-pipeline
    Description: Name of the GitHub repository
    Type: String
  Branch:
    Default: main
    Description: GitHub branch to use
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Stack Settings"
        Parameters:
          - Email
          - GitHubToken
          - GitHubUser
          - Repo
          - Branch

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-artifact-store"
      VersioningConfiguration:
        Status: Enabled
  
  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-data"
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${AWS::StackName}-pipeline-topic"
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  CFNNagProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-cfnnag"
      Description: CloudFormation linting project
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: public.ecr.aws/codebuild/standard:6.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
      BuildSpec: !Sub |
        version: 0.2
        phases:
          install:
            commands:
              - gem install cfn-nag
          build:
            commands:
              - cfn_nag_scan --input-path CloudFormation/*.yaml

  ModelTrainingProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-modeltraining"
      Description: Train a machine learning model
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: public.ecr.aws/codebuild/standard:6.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
      BuildSpec: !Sub |
        version: 0.2
        phases:
          install:
            commands:
              - pip3 install boto3 wget
              - pip install boto3 wget
          build:
            commands:
              - python3 Source/training.py "${SagemakerRole.Arn}" "${DataBucket}" "${AWS::StackName}" $CODEBUILD_RESOLVED_SOURCE_VERSION

  TestEndpointProjectQA:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-test-qa"
      Description: Test the QA SageMaker endpoint
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: public.ecr.aws/codebuild/standard:6.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
      BuildSpec: !Sub |
        version: 0.2
        phases:
          install:
            commands:
              - pip3 install boto3 numpy
          build:
            commands:
              - python3 Source/test.py "qa-${AWS::StackName}" "CloudFormation/configuration_qa.json"

  TestEndpointProjectProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-test-prod"
      Description: Test the production SageMaker endpoint
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: public.ecr.aws/codebuild/standard:6.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
      BuildSpec: !Sub |
        version: 0.2
        phases:
          install:
            commands:
              - pip3 install boto3 numpy
          build:
            commands:
              - python3 Source/test.py "prod-${AWS::StackName}" "CloudFormation/configuration_prod.json"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref Repo
                Branch: !Ref Branch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build_and_Train
          Actions:
            - Name: CFN_Nag
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CFNNagProject
              InputArtifacts:
                - Name: SourceOutput
            - Name: ModelTraining
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref ModelTrainingProject
              InputArtifacts:
                - Name: SourceOutput

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                  - sns:Publish
                  - sagemaker:*
                Resource: "*"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                  - logs:*
                Resource: "*"
